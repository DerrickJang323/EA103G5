-- #################### DROP & CREATE SEQUENCE ####################

-- ==================== #1 會員 MEMBERS ====================
DROP SEQUENCE SEQ_MEMBERS;
CREATE SEQUENCE SEQ_MEMBERS
    MAXVALUE 9999;
-- ==================== #2 老師 TEACHER ====================
DROP SEQUENCE SEQ_TCHR;
CREATE SEQUENCE SEQ_TCHR
    MAXVALUE 9999;
-- ==================== #3 員工 EMPLOYEE ====================
DROP SEQUENCE SEQ_EMPLOYEE;
CREATE SEQUENCE SEQ_EMPLOYEE
    MAXVALUE 9999;
-- ==================== #4 功能 FUNCTIONX ====================
DROP SEQUENCE SEQ_FUNCTIONX;
CREATE SEQUENCE SEQ_FUNCTIONX
    MAXVALUE 9999;
-- ==================== #5 員工權限 EMP_AUTHORITY ====================
-- NO SEQUENCE
-- ==================== #6 聊天 CHATTING ====================
DROP SEQUENCE SEQ_CHATNO;
CREATE SEQUENCE SEQ_CHATNO
    MAXVALUE 9999;
-- ==================== #7 教室 CLASSROOM ====================
DROP SEQUENCE SEQ_ROOMNO;
CREATE SEQUENCE SEQ_ROOMNO 
    MAXVALUE 9999;
-- ==================== #8 講者 SPEAKER ====================
DROP SEQUENCE SEQ_SPKRNO;
CREATE SEQUENCE SEQ_SPKRNO
    MAXVALUE 9999;
-- ==================== #9 講座 LECTURE ====================
DROP SEQUENCE SEQ_LECNO;
CREATE SEQUENCE SEQ_LECNO
    START WITH 11
    MAXVALUE 9999;
-- ==================== #10 講座訂單 LEC_ORDER ====================
DROP SEQUENCE SEQ_LODRNO;
CREATE SEQUENCE SEQ_LODRNO
    START WITH 9
    MAXVALUE 9999;
-- ==================== #11 講座定位明細 LEC_SEAT ====================
-- NO SEQUENCE
-- ==================== #12 課程種類 COURSE_TYPE ====================
DROP SEQUENCE SEQ_CSTYPE;
CREATE SEQUENCE SEQ_CSTYPE
    MAXVALUE 9999;
-- ==================== #13 課程 COURSE ====================
DROP SEQUENCE SEQ_CS;
CREATE SEQUENCE SEQ_CS
    MAXVALUE 9999;
-- ==================== #14 課程影片 VIDEO ====================
DROP SEQUENCE SEQ_VIDEO;
CREATE SEQUENCE SEQ_VIDEO
    MAXVALUE 9999;
-- ==================== #15 觀看進度 VIDEO_BAR ====================
-- NO SEQUENCE
-- ==================== #16 課程附件 COURSE_ATTACH ====================
DROP SEQUENCE SEQ_ATTNO;
CREATE SEQUENCE SEQ_ATTNO
    MAXVALUE 9999;
-- ==================== #17 評價 COURSE_ASSESS ====================
DROP SEQUENCE SEQ_ASESNO;
CREATE SEQUENCE SEQ_ASESNO
    MAXVALUE 9999;
-- ==================== #18 留言板貼文 POSTS ====================
DROP SEQUENCE SEQ_POSTNO;
CREATE SEQUENCE SEQ_POSTNO
    MAXVALUE 9999;
-- ==================== #19 留言板檢舉明細 REPORT_DETAIL ====================
DROP SEQUENCE SEQ_REPORTNO;
CREATE SEQUENCE SEQ_REPORTNO
    MAXVALUE 9999;
-- ==================== #20 優惠活動表 PROMO_LIST ====================
DROP SEQUENCE SEQ_PROM;
CREATE SEQUENCE SEQ_PROM
    MAXVALUE 9999;
-- ==================== #21 優惠活動明細 PROMO_DETAIL ====================
-- NO SEQUENCE
-- ==================== #22 折扣碼優惠 COUP_CODE ====================
DROP SEQUENCE SEQ_COUP_CODE;
CREATE SEQUENCE SEQ_COUP_CODE
    MAXVALUE 9999;
-- ==================== #23 課程訂單主檔 ORDER_MASTER ====================
DROP SEQUENCE SEQ_ORDER_MASTER;
CREATE SEQUENCE SEQ_ORDER_MASTER
    MAXVALUE 9999;
-- ==================== #24 課程訂單明細 ORDER_DETAIL ====================
-- NO SEQUENCE
-- ==================== #25 追蹤清單 TRACKING_LIST ====================
-- NO SEQUENCE
-- ==================== #26 題型難易度 TEST_TYPE ====================
DROP SEQUENCE SEQ_TSTYPE;
CREATE SEQUENCE SEQ_TSTYPE
    MAXVALUE 9999;
-- ==================== #27 題庫 QUESTION_BANK ====================
DROP SEQUENCE SEQ_QBANK;
CREATE SEQUENCE SEQ_QBANK
    MAXVALUE 9999;
-- ==================== #28 考卷 TESTS ====================
DROP SEQUENCE SEQ_TESTS;
CREATE SEQUENCE SEQ_TESTS
    MAXVALUE 9999;
-- ==================== #29 考卷作答明細 ANSWER_LIST ====================
DROP SEQUENCE SEQ_ANS;
CREATE SEQUENCE SEQ_ANS
    MAXVALUE 9999;



-- #################### DROP TABLE ####################

DROP TABLE ANSWER_LIST;
DROP TABLE TESTS;
DROP TABLE QUESTION_BANK;
DROP TABLE TEST_TYPE;
DROP TABLE TRACKING_LIST;
DROP TABLE ORDER_DETAIL;
DROP TABLE ORDER_MASTER;
DROP TABLE COUP_CODE;
DROP TABLE PROMO_DETAIL;
DROP TABLE PROMO_LIST;
DROP TABLE REPORT_DETAIL;
DROP TABLE POSTS;
DROP TABLE COURSE_ASSESS;
DROP TABLE COURSE_ATTACH;
DROP TABLE VIDEO_BAR;
DROP TABLE VIDEO;
DROP TABLE COURSE;
DROP TABLE COURSE_TYPE;
DROP TABLE LEC_SEAT;
DROP TABLE LEC_ORDER;
DROP TABLE LECTURE;
DROP TABLE SPEAKER;
DROP TABLE CLASSROOM;
DROP TABLE CHATTING;
DROP TABLE EMP_AUTHORITY;
DROP TABLE FUNCTIONX;
DROP TABLE EMPLOYEE;
DROP TABLE TEACHER;
DROP TABLE MEMBERS;



-- #################### CREATE TABLE ####################

-- ==================== CREATE #1 會員 MEMBERS ====================
CREATE TABLE MEMBERS (
    MEMNO           VARCHAR2(8)  NOT NULL,
    MEMACC          VARCHAR2(20) UNIQUE NOT NULL,
    MEMPWD          VARCHAR2(20) NOT NULL,
    MEMNAME         VARCHAR2(50) NOT NULL,
    NKNAME          VARCHAR2(50) ,
    MEMBDAY         DATE NOT NULL,          
    MEMAIL          VARCHAR2(60) UNIQUE NOT NULL,
    MPHONE          VARCHAR2(10) NOT NULL,
    MPROFILE        BLOB,
    REGDATE         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MEMDELETE       NUMBER(1) DEFAULT 0 NOT NULL CHECK(MEMDELETE IN(0, 1)), 
    CONSTRAINT PK_MEMBERS PRIMARY KEY (MEMNO)
);
-- ==================== CREATE #2 老師 TEACHER ====================
CREATE TABLE TEACHER(
    TCHRNO          VARCHAR2(8) NOT NULL,
    MEMNO           VARCHAR2(8) UNIQUE NOT NULL,
    TCHRINTRO       CLOB, 
    TCHRCERT1        BLOB,
    TCHRCERT2        BLOB,
    TCHRSTATUS      VARCHAR2(20) DEFAULT '待審核' NOT NULL CHECK(TCHRSTATUS IN('待審核', '已通過', '未通過')),
    REJREASON          VARCHAR2(60) DEFAULT '無' NOT NULL,
    BANKACC         VARCHAR2(20) NOT NULL,
    CONSTRAINT PK_TEACHER PRIMARY KEY (TCHRNO),
    CONSTRAINT FK_TEACHER_MEMBERS FOREIGN KEY (MEMNO) REFERENCES MEMBERS(MEMNO)
    
);
-- ==================== CREATE #3 員工 EMPLOYEE ====================
CREATE TABLE EMPLOYEE(
    EMPNO           VARCHAR2(8) NOT NULL,
    EMPACC          VARCHAR2(20) NOT NULL,
    EMPPWD          VARCHAR2(20) NOT NULL,
    EMPNAME         VARCHAR2(50) NOT NULL,
    EMPSALARY       NUMBER(10),
    HIREDATE        DATE,
    EMPEMAIL        VARCHAR2(60),
    EMPDELETE       NUMBER(1),
    CONSTRAINT PK_EMPLOYEE PRIMARY KEY (EMPNO)
);
-- ==================== CREATE #4 功能 FUNCTIONX ====================
CREATE TABLE FUNCTIONX(
    FUNCNO          VARCHAR2(8) NOT NULL,
    FUNCNAME        VARCHAR2(50) NOT NULL,
    FUNCIFO         VARCHAR2(100) NOT NULL,
    FUNCLMOD        TIMESTAMP,
    CONSTRAINT PK_FUNCTION PRIMARY KEY (FUNCNO)
);
-- ==================== CREATE #5 員工權限 EMP_AUTHORITY ====================
CREATE TABLE EMP_AUTHORITY(
    EMPNO           VARCHAR2(8) NOT NULL,
    FUNCNO          VARCHAR2(8) NOT NULL,
    CONSTRAINT PK_EMP_AUTHORITY PRIMARY KEY (EMPNO,FUNCNO),
    CONSTRAINT FK_EMP_AUTHORITY_EMPNO FOREIGN KEY(EMPNO) REFERENCES EMPLOYEE(EMPNO),
    CONSTRAINT FK_EMP_AUTHORITY_FUNCNO FOREIGN KEY(FUNCNO) REFERENCES FUNCTIONX(FUNCNO)
);
-- ==================== CREATE #6 聊天 CHATTING ====================
CREATE TABLE CHATTING(
    CHATNO          VARCHAR2(10) NOT NULL,
    USER1           VARCHAR2(8)  NOT NULL,
    USER2           VARCHAR2(8),
    EMPNO           VARCHAR2(8),
    NAVI            NUMBER(1),
    MSG             VARCHAR2(500),
    MSGTIME         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MSGSTATUS       NUMBER(1),
    CONSTRAINT PK_CHATTING PRIMARY KEY(CHATNO),
    CONSTRAINT FK_CHATTING_MEMBERS_1 FOREIGN KEY (USER1) REFERENCES MEMBERS (MEMNO),
    CONSTRAINT FK_CHATTING_MEMBERS_2 FOREIGN KEY (USER2) REFERENCES MEMBERS (MEMNO),
    CONSTRAINT FK_CHATTING_EMPLOYEE FOREIGN KEY (EMPNO) REFERENCES EMPLOYEE (EMPNO)
);
-- ==================== CREATE #7 教室 CLASSROOM ====================
CREATE TABLE CLASSROOM (
    ROOMNO          VARCHAR2(8) NOT NULL,
    ROOMNAME        VARCHAR2(50) NOT NULL,
    ROOMROW         NUMBER(2) NOT NULL,
    ROOMCOLUMN      NUMBER(2) NOT NULL,
    DEFAULTSEAT     VARCHAR2(300) NOT NULL,
    ROOMDELETE      NUMBER(1) DEFAULT 0 NOT NULL CHECK(ROOMDELETE IN(0, 1)),
    ROOMLASTMOD     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CLASSROOM PRIMARY KEY (ROOMNO)
);
-- ==================== CREATE #8 講者 SPEAKER ====================
CREATE TABLE SPEAKER(
    SPKRNO       VARCHAR2(8) NOT NULL,
    SPKRNAME     VARCHAR2(50) NOT NULL,
    SPKRPHONE    VARCHAR2(10),
    SPKREMAIL    VARCHAR2(60),
    SPKRINFO     BLOB,
    SPKRICON     BLOB,
    CONSTRAINT PK_SPEAKER PRIMARY KEY (SPKRNO)
);
-- ==================== CREATE #9 講座 LECTURE ====================
CREATE TABLE LECTURE(
    LECNO           VARCHAR2(8) NOT NULL,
    LECNAME         VARCHAR2(50) NOT NULL,
    LECPRICE        NUMBER(6) NOT NULL,
    SPKRNO          VARCHAR2(8) NOT NULL,
    ROOMNO          VARCHAR2(8) NOT NULL,
    LECSTART        TIMESTAMP NOT NULL,
    LECEND          TIMESTAMP NOT NULL,
    SIGNSTART       TIMESTAMP NOT NULL,
    SIGNEND         TIMESTAMP NOT NULL,
    INITSEAT        VARCHAR2(300),
    CURRSEAT        VARCHAR2(300),
    LECINFO         BLOB,
    LECPIC          BLOB,
    LECSTATUS       NUMBER DEFAULT 1 CHECK(LECSTATUS IN(0, 1)),
    LECLMOD         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_LECTURE PRIMARY KEY (LECNO),
    CONSTRAINT FK_LECTURE_SPEAKER FOREIGN KEY (SPKRNO) REFERENCES SPEAKER(SPKRNO),
    CONSTRAINT FK_LECTURE_CLASSROOM FOREIGN KEY (ROOMNO) REFERENCES CLASSROOM(ROOMNO)
);
-- ==================== CREATE #10 講座訂單 LEC_ORDER ====================
CREATE TABLE LEC_ORDER(
    LODRNO          VARCHAR2(8) NOT NULL,
    MEMNO           VARCHAR2(8) NOT NULL,
    LECNO           VARCHAR2(8) NOT NULL,
    LECAMT          NUMBER(6) NOT NULL,
    LODRSEAT        VARCHAR2(300),
    LODRSTATUS      VARCHAR2(20) DEFAULT '已付款',
    LODRTIME        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    LODRLMOD        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_LEC_ORDER PRIMARY KEY (LODRNO),
    CONSTRAINT FK_LEC_ORDER_MEMBERS FOREIGN KEY (MEMNO) REFERENCES MEMBERS(MEMNO),
    CONSTRAINT FK_LEC_ORDER_LECTURE FOREIGN KEY (LECNO) REFERENCES LECTURE (LECNO)
);
-- ==================== CREATE #11 講座定位明細 LEC_SEAT ====================
CREATE TABLE LEC_SEAT(
    LODRNO          VARCHAR2(8) NOT NULL,
    SEATNO          VARCHAR2(4) NOT NULL,
    SEATSTATUS      VARCHAR2(20) DEFAULT '正常',
    CONSTRAINT PK_LEC_SEAT PRIMARY KEY (LODRNO, SEATNO),
    CONSTRAINT FK_LEC_SEAT_LEC_ORDER FOREIGN KEY (LODRNO) REFERENCES LEC_ORDER (LODRNO)
);
-- ==================== CREATE #12 課程種類 COURSE_TYPE ====================
CREATE TABLE COURSE_TYPE(
	CSTYPENO        VARCHAR2(8) NOT NULL,
	CSTYPENAME      VARCHAR2(50),
    CONSTRAINT PK_COURSE_TYPE PRIMARY KEY (CSTYPENO)
);
-- ==================== CREATE #13 課程 COURSE ====================
CREATE TABLE COURSE(
	COURSENO		VARCHAR2(8) NOT NULL,
	CSTYPENO		VARCHAR2(8) NOT NULL,
	TCHRNO			VARCHAR2(8) NOT NULL,
	COURSENAME		VARCHAR2(50) NOT NULL,
	COURSEINFO		CLOB,
	COURSEPRICE		NUMBER(6) NOT NULL,
	TTLTIME			NUMBER(6),
	CSSTATUS		VARCHAR(20) DEFAULT '審核中' CHECK(CSSTATUS IN('審核中','上架','下架')) NOT NULL,
	CSSCORE			NUMBER(8),
	CSSCORETIMES	NUMBER(5),
    COURSEIMG       BLOB NOT NULL,
    COURLMOD        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT PK_COURSE PRIMARY KEY (COURSENO),
	CONSTRAINT FK_COURSE_COURSE_TYPE FOREIGN KEY (CSTYPENO) REFERENCES COURSE_TYPE(CSTYPENO),
	CONSTRAINT FK_COURSE_TEACHER FOREIGN KEY (TCHRNO) REFERENCES TEACHER(TCHRNO)
);
-- ==================== CREATE #14 課程影片 COURSE_VIDEO ====================
CREATE TABLE VIDEO(
	VIDEONO			VARCHAR2(8) NOT NULL,
	COURSENO 		VARCHAR2(8) NOT NULL,
	TESTSCOPE		NUMBER(3) NOT NULL,
	CHAPTERNO		NUMBER(3) NOT NULL,
	CHAPTERNAME 	VARCHAR2(50),
	CHAPTERLEN		NUMBER(4),
	VIDEO 			BLOB NOT NULL,
	CONSTRAINT PK_VIDEO PRIMARY KEY (VIDEONO),
	CONSTRAINT FK_VIDEO_COURSE FOREIGN KEY (COURSENO) REFERENCES COURSE(COURSENO)
);
-- ==================== CREATE #15 觀看進度 VIDEO_BAR ====================
CREATE TABLE VIDEO_BAR(
    MEMNO           VARCHAR2(8) NOT NULL,
    VIDEONO         VARCHAR2(8) NOT NULL,
    VIDEOSEC        NUMBER(4),
    VIDEOTTLTIME    NUMBER(4),
    VIDEOLASTTIME   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_MEMBER_COURSE_VIDEO PRIMARY KEY (MEMNO, VIDEONO),
    CONSTRAINT FK_VIDEO_BAR_MEMBER FOREIGN KEY (MEMNO) REFERENCES MEMBERS (MEMNO),
    CONSTRAINT FK_VIDEO_BAR_VIDEO FOREIGN KEY (VIDEONO) REFERENCES VIDEO (VIDEONO)
);
-- ==================== CREATE #16 課程附件 COURSE_ATTACH ====================
CREATE TABLE COURSE_ATTACH(
    ATTNO           VARCHAR2(8) NOT NULL,
    COURSENO        VARCHAR2(8) NOT NULL,
    ATTNAME         VARCHAR2(50),
    ATTFILE BLOB,
    CONSTRAINT PK_COURSE_ATTACH PRIMARY KEY (ATTNO),
    CONSTRAINT FK_COURSE_ATTACH_COURSE FOREIGN KEY (COURSENO) REFERENCES COURSE (COURSENO)
);
-- ==================== CREATE #17 評價 COURSE_ASSESS ====================
CREATE TABLE COURSE_ASSESS(
    ASESNO          VARCHAR2(8) NOT NULL,
    COURSENO        VARCHAR2(8) NOT NULL,
    MEMNO           VARCHAR2(8) NOT NULL,
    COURSESCORE     NUMBER(1) NOT NULL,
    COMMENTS        VARCHAR2(300),
    COMMENTTIME     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_COURSE_ASSESS PRIMARY KEY (ASESNO),
    CONSTRAINT FK_COURSE_ASSESS_COURSE FOREIGN KEY (COURSENO) REFERENCES COURSE (COURSENO),
    CONSTRAINT FK_COURSE_ASSESS_MEMBERS FOREIGN KEY (MEMNO) REFERENCES MEMBERS (MEMNO)
);
-- ==================== CREATE #18 留言板貼文 POSTS ====================
CREATE TABLE POSTS(
    POSTNO          VARCHAR2(8) NOT NULL,
    SUPERPOSTNO     VARCHAR2(8),
    COURSENO        VARCHAR2(8) NOT NULL,
    MEMNO           VARCHAR2(8) NOT NULL,
    POSTCONTENT     VARCHAR2(300) NOT NULL,
    POSTTIME        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ISHIDDEN        NUMBER(1) DEFAULT 0,
    CONSTRAINT PK_POSTNO PRIMARY KEY (POSTNO),
    CONSTRAINT FK_POSTS_POSTS FOREIGN KEY (SUPERPOSTNO) REFERENCES POSTS (POSTNO),
    CONSTRAINT FK_POSTS_COURSE FOREIGN KEY (COURSENO) REFERENCES COURSE (COURSENO),
    CONSTRAINT FK_POSTS_MEMBERS FOREIGN KEY (MEMNO) REFERENCES MEMBERS (MEMNO)
);
-- ==================== CREATE #19 留言板檢舉明細 REPORT_DETAIL ====================
CREATE TABLE REPORT_DETAIL(
    REPORTNO        VARCHAR2(8) NOT NULL,
    MEMNO           VARCHAR2(8) NOT NULL,
    POSTNO          VARCHAR2(8) NOT NULL,
    POSTSTATUS      VARCHAR2(20) DEFAULT '未處理',
    EMPNO           VARCHAR2(8),
    REPORTLMOD      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_REPORT_DETAIL PRIMARY KEY(REPORTNO),
    CONSTRAINT FK_REPORT_DETAIL_MEMBERS FOREIGN KEY (MEMNO) REFERENCES MEMBERS (MEMNO),
    CONSTRAINT FK_REPORT_DETAIL_POSTS FOREIGN KEY (POSTNO) REFERENCES POSTS (POSTNO),
    CONSTRAINT FK_REPORT_DETAIL_EMPLOYEE FOREIGN KEY (EMPNO) REFERENCES EMPLOYEE (EMPNO)
);
-- ==================== CREATE #20 優惠活動表 PROMO_LIST ====================
CREATE TABLE PROMO_LIST(
	PROMONO 		VARCHAR2(8) NOT NULL,
	PROMONAME 		VARCHAR2(20),
	STARTDATE 		DATE NOT NULL,
	ENDDATE 		DATE NOT NULL,
	PROMOINFO 		VARCHAR2(60),
	CONSTRAINT PK_PROMO_LIST PRIMARY KEY (PROMONO)
);
-- ==================== CREATE #21 優惠活動明細 PROMO_DETAIL ====================
CREATE TABLE PROMO_DETAIL(
	PROMONO 		VARCHAR2(8) NOT NULL,
	CSTYPENO 		VARCHAR2(8) NOT NULL,
	PERCENTAGE 		NUMBER(3),
	CONSTRAINT PK_PROMO_DETAIL PRIMARY KEY (PROMONO, CSTYPENO),
	CONSTRAINT FK_PROMO_DETAIL_PROMO_LIST FOREIGN KEY (PROMONO) REFERENCES PROMO_LIST(PROMONO),
	CONSTRAINT FK_PROMO_DETAIL_COURSE_TYPE FOREIGN KEY (CSTYPENO) REFERENCES COURSE_TYPE(CSTYPENO)
);
-- ==================== CREATE #22 折扣碼優惠 COUP_CODE ====================
CREATE TABLE COUP_CODE(
	COUPNO 			VARCHAR2(8) NOT NULL,
	MEMNO 			VARCHAR2(8) NOT NULL,
	COUPCODE 		VARCHAR2(10) UNIQUE NOT NULL,
	DISCAMT			NUMBER(6),
	DISCSTATUS		NUMBER(1) DEFAULT 0 CHECK(DISCSTATUS IN (0, 1)),
	COUPTIME 		DATE DEFAULT CURRENT_TIMESTAMP,
	COUPEXP 		DATE,
    CONSTRAINT PK_COUP_CODE PRIMARY KEY (COUPNO),
    CONSTRAINT FK_COUP_CODE_MEMBERS FOREIGN KEY (MEMNO) REFERENCES MEMBERS(MEMNO)
);
-- ==================== CREATE #23 課程訂單主檔 ORDER_MASTER ====================
CREATE TABLE ORDER_MASTER(
	ORDERNO 		VARCHAR2(8) NOT NULL,
	MEMNO 			VARCHAR2(8) NOT NULL,
	ORDERDATE		TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	ORDERSTATUS		VARCHAR2(20) DEFAULT '未付款' CHECK (ORDERSTATUS IN ('未付款','已付款','失效訂單','已結單')),
	ORDERAMT 		NUMBER(6),
	COUPNO 			VARCHAR2(8),
	PAYBY 			VARCHAR2(20),
	CONSTRAINT PK_ORDER_MASTER PRIMARY KEY (ORDERNO),
	CONSTRAINT FK_ORDER_MASTER_MEMBERS FOREIGN KEY (MEMNO) REFERENCES MEMBERS(MEMNO),
	CONSTRAINT FK_ORDER_MASTER_COUP_CODE FOREIGN KEY (COUPNO) REFERENCES COUP_CODE(COUPNO)
);
-- ==================== CREATE #24 課程訂單明細 ORDER_DETAIL ====================
CREATE TABLE ORDER_DETAIL(
	ORDERNO			VARCHAR2(8) NOT NULL,
	COURSENO		VARCHAR2(8) NOT NULL,
	SELLPRICE		NUMBER(6),
	ODSTATUS 		VARCHAR2(20) DEFAULT '鑑賞期' CHECK (ODSTATUS IN ('鑑賞期','申請退款','退款完成','交易完成')),
	PROMONO			VARCHAR2(8),
	CONSTRAINT PK_ORDER_DETAIL PRIMARY KEY (ORDERNO, COURSENO),
	CONSTRAINT FK_ORDER_DETAIL_ORDER_MASTER FOREIGN KEY (ORDERNO) REFERENCES ORDER_MASTER(ORDERNO),
	CONSTRAINT FK_ORDER_DETAIL_COURSE FOREIGN KEY (COURSENO) REFERENCES COURSE(COURSENO),
	CONSTRAINT FK_ORDER_DETAIL_PROMO_LIST FOREIGN KEY (PROMONO) REFERENCES PROMO_LIST(PROMONO)
);
-- ==================== CREATE #25 追蹤清單 TRACKING_LIST ====================
CREATE TABLE TRACKING_LIST(
	MEMNO           VARCHAR2(8) NOT NULL,
	COURSENO        VARCHAR2(8) NOT NULL,
    CONSTRAINT PK_TRACKING_LIST PRIMARY KEY (MEMNO, COURSENO)
);
-- ==================== CREATE #26 題型難易度 TEST_TYPE ====================
CREATE TABLE TEST_TYPE(
    TESTTYPENO      NUMBER(2) NOT NULL,
    TESTTYPE        VARCHAR2(50),   
    TESTDGEE        VARCHAR2(50),
    CONSTRAINT PK_TEST_TYPE PRIMARY KEY (TESTTYPENO)
);
-- ==================== CREATE #27 題庫 QUESTION_BANK ====================
CREATE TABLE QUESTION_BANK(
    QBANKNO         VARCHAR2(8) NOT NULL,
    COURSENO        VARCHAR2(8) NOT NULL,
    TESTTYPENO      NUMBER(2) NOT NULL,
    TESTSCOPE       VARCHAR2(10) NOT NULL,
    QUSTMT          CLOB NOT NULL,
    OP1             VARCHAR2(300),
    OP2             VARCHAR2(300),
    OP3             VARCHAR2(300),
    OP4             VARCHAR2(300),
    QUANS           VARCHAR2(300) NOT NULL,
    QUSTATUS        NUMBER(1) default 1,
    CONSTRAINT PK_QUESTION_BANK PRIMARY KEY (QBANKNO),
    CONSTRAINT FK_QUESTION_BANK_COURSE FOREIGN KEY (COURSENO) REFERENCES COURSE(COURSENO),
    CONSTRAINT FK_QUESTION_BANK_TESTTYPENO FOREIGN KEY (TESTTYPENO) REFERENCES TEST_TYPE(TESTTYPENO)
);
-- ==================== CREATE #28 考卷 TESTS ====================
CREATE TABLE TESTS(
    TESTNO          VARCHAR2(8) NOT NULL,
    COURSENO        VARCHAR2(8) NOT NULL,
    MEMNO           VARCHAR2(8) NOT NULL,
    TESTSCOPE       NUMBER(2) NOT NULL,
    SCORE           NUMBER(3) NULL,
    TTLTIME         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_TESTS PRIMARY KEY (TESTNO),
    CONSTRAINT FK_TESTS_COURS FOREIGN KEY (COURSENO) REFERENCES COURSE(COURSENO),
    CONSTRAINT FK_TESTS_MEMBERS FOREIGN KEY (MEMNO) REFERENCES MEMBERS(MEMNO)
);
-- ==================== CREATE #29 考卷作答明細 ANSWER_LIST ====================
CREATE TABLE ANSWER_LIST(
    ANSNO           VARCHAR2(8) NOT NULL,
    TESTNO          VARCHAR2(8) NOT NULL,
    QBANKNO         VARCHAR2(8) NOT NULL,
    QUNO            NUMBER(2) NOT NULL,
    OPORDER         VARCHAR2(4) NOT NULL,
    TESTANS         VARCHAR2(50) NOT NULL,
    STUDENTANS      VARCHAR2(50) NULL,
    CONSTRAINT PK_ANSWER_LIST PRIMARY KEY (ANSNO),
    CONSTRAINT FK_ANSWER_LIST_TESTS FOREIGN KEY (TESTNO) REFERENCES TESTS(TESTNO),
    CONSTRAINT FK_ANSWER_LIST_QUESTION_BANK FOREIGN KEY (QBANKNO) REFERENCES QUESTION_BANK(QBANKNO)
);



-- ==================== #1 會員 MEMBERS ====================
INSERT INTO MEMBERS(MEMNO,MEMACC,MEMPWD,MEMNAME,NKNAME,MEMBDAY,MEMAIL,MPHONE) VALUES ('MEM' || LPAD(SEQ_MEMBERS.NEXTVAL, 4, 0),'TEST0001','123456','曾愷玹','Alice',TO_DATE('1984-02-22','YYYY-MM-DD'),'alice19840222@gamil.com','0988123123');
INSERT INTO MEMBERS(MEMNO,MEMACC,MEMPWD,MEMNAME,NKNAME,MEMBDAY,MEMAIL,MPHONE) VALUES ('MEM' || LPAD(SEQ_MEMBERS.NEXTVAL, 4, 0),'TEST0002','123456','邱勝翊','Prince',TO_DATE('1989-04-14','YYYY-MM-DD'),'prince19890414@gamil.com','0988321321');
INSERT INTO MEMBERS(MEMNO,MEMACC,MEMPWD,MEMNAME,NKNAME,MEMBDAY,MEMAIL,MPHONE) VALUES ('MEM' || LPAD(SEQ_MEMBERS.NEXTVAL, 4, 0),'TEST0003','123456','鄭伊健','‎Ekin‎',TO_DATE('1967-10-04','YYYY-MM-DD'),'‎ekin19671004@gamil.com','0989123456');
INSERT INTO MEMBERS(MEMNO,MEMACC,MEMPWD,MEMNAME,NKNAME,MEMBDAY,MEMAIL,MPHONE) VALUES ('MEM' || LPAD(SEQ_MEMBERS.NEXTVAL, 4, 0),'TEST0004','123456','江南','PSY',TO_DATE('1977-12-31','YYYY-MM-DD'),'PSY19771231@gamil.com','0989654321');
INSERT INTO MEMBERS(MEMNO,MEMACC,MEMPWD,MEMNAME,NKNAME,MEMBDAY,MEMAIL,MPHONE) VALUES ('MEM' || LPAD(SEQ_MEMBERS.NEXTVAL, 4, 0),'TEST0005','123456','楊祐寧','Tony',TO_DATE('1982-08-30','YYYY-MM-DD'),'tony19820830@gamil.com','0987555666');
INSERT INTO MEMBERS(MEMNO,MEMACC,MEMPWD,MEMNAME,NKNAME,MEMBDAY,MEMAIL,MPHONE) VALUES ('MEM' || LPAD(SEQ_MEMBERS.NEXTVAL, 4, 0),'TEST0006','123456','黃明志','Namewee',TO_DATE('1983-05-06','YYYY-MM-DD'),'namewee19830506@gamil.com','0987666555');
INSERT INTO MEMBERS(MEMNO,MEMACC,MEMPWD,MEMNAME,NKNAME,MEMBDAY,MEMAIL,MPHONE) VALUES ('MEM' || LPAD(SEQ_MEMBERS.NEXTVAL, 4, 0),'TEST0007','123456','張學友','Jacky',TO_DATE('1961-07-10','YYYY-MM-DD'),'jacky19610710@gamil.com','0986321123');
-- ==================== #2 老師 TEACHER ====================
INSERT INTO TEACHER(TCHRNO,MEMNO,BANKACC)VALUES ('TCHR' || LPAD(SEQ_TCHR.NEXTVAL, 4, 0),'MEM0001','013132231093363');
INSERT INTO TEACHER(TCHRNO,MEMNO,BANKACC)VALUES ('TCHR' || LPAD(SEQ_TCHR.NEXTVAL, 4, 0),'MEM0002','014010309917239');
INSERT INTO TEACHER(TCHRNO,MEMNO,BANKACC)VALUES ('TCHR' || LPAD(SEQ_TCHR.NEXTVAL, 4, 0),'MEM0003','013269415754939');
INSERT INTO TEACHER(TCHRNO,MEMNO,BANKACC)VALUES ('TCHR' || LPAD(SEQ_TCHR.NEXTVAL, 4, 0),'MEM0004','084614773869509');
INSERT INTO TEACHER(TCHRNO,MEMNO,BANKACC)VALUES ('TCHR' || LPAD(SEQ_TCHR.NEXTVAL, 4, 0),'MEM0005','084797978081758');
INSERT INTO TEACHER(TCHRNO,MEMNO,BANKACC)VALUES ('TCHR' || LPAD(SEQ_TCHR.NEXTVAL, 4, 0),'MEM0006','014269412634712');
INSERT INTO TEACHER(TCHRNO,MEMNO,BANKACC)VALUES ('TCHR' || LPAD(SEQ_TCHR.NEXTVAL, 4, 0),'MEM0007','012572412746394');
-- ==================== #3 員工 EMPLOYEE ====================
INSERT INTO EMPLOYEE(EMPNO, EMPACC, EMPPWD, EMPNAME, EMPSALARY, HIREDATE, EMPEMAIL, EMPDELETE)
VALUES('EMP' || LPAD(SEQ_EMPLOYEE.NEXTVAL, 4, 0), 'T001', 123456, 'DAVID', 30000, TO_DATE('2020-08-25','YYYY-MM-DD'), '123@gmail.com', 0);
INSERT INTO EMPLOYEE(EMPNO, EMPACC, EMPPWD, EMPNAME, EMPSALARY, HIREDATE, EMPEMAIL, EMPDELETE)
VALUES('EMP' || LPAD(SEQ_EMPLOYEE.NEXTVAL, 4, 0), 'T002', 123456, 'JAMES', 30000, TO_DATE('2020-07-25','YYYY-MM-DD'), 'james@gmail.com', 0);
INSERT INTO EMPLOYEE(EMPNO, EMPACC, EMPPWD, EMPNAME, EMPSALARY, HIREDATE, EMPEMAIL, EMPDELETE)
VALUES('EMP' || LPAD(SEQ_EMPLOYEE.NEXTVAL, 4, 0), 'T003', 123456, 'BEN', 32000, TO_DATE('2020-07-25','YYYY-MM-DD'), 'ben@gmail.com', 0);
-- ==================== #4 功能 FUNCTIONX ====================
INSERT INTO FUNCTIONX(FUNCNO, FUNCNAME, FUNCIFO, FUNCLMOD)
VALUES('FUN' || LPAD(SEQ_FUNCTIONX.NEXTVAL, 4, 0), '檢舉功能', '這是可以處理會員檢舉的功能', CURRENT_TIMESTAMP);
INSERT INTO FUNCTIONX(FUNCNO, FUNCNAME, FUNCIFO, FUNCLMOD)
VALUES('FUN' || LPAD(SEQ_FUNCTIONX.NEXTVAL, 4, 0), '課程調整功能', '這是可以調整課程的功能', CURRENT_TIMESTAMP);
-- ==================== #5 員工權限 EMP_AUTHORITY ====================
INSERT INTO EMP_AUTHORITY(EMPNO, FUNCNO) VALUES('EMP0001', 'FUN0001');
INSERT INTO EMP_AUTHORITY(EMPNO, FUNCNO) VALUES('EMP0002', 'FUN0002');
-- ==================== #6 聊天 CHATTING ====================
INSERT INTO CHATTING (CHATNO, USER1, USER2, NAVI, MSG, MSGTIME, MSGSTATUS)
VALUES('CHATNO' || LPAD(SEQ_CHATNO.NEXTVAL, 4, 0), 'MEM0001', 'MEM0002',1,'Hello',CURRENT_TIMESTAMP,1);
INSERT INTO CHATTING (CHATNO, USER1, EMPNO, NAVI, MSG, MSGTIME, MSGSTATUS)
VALUES('CHATNO' || LPAD(SEQ_CHATNO.NEXTVAL, 4, 0), 'MEM0001', 'EMP0001',1,'你好',CURRENT_TIMESTAMP,1);
-- ==================== #7 教室 CLASSROOM ====================
INSERT INTO CLASSROOM (ROOMNO, ROOMNAME, ROOMROW, ROOMCOLUMN, DEFAULTSEAT)
VALUES('ROOM' || LPAD(SEQ_ROOMNO.NEXTVAL, 4, 0), 'A303', 3, 3, '111111111');
INSERT INTO CLASSROOM (ROOMNO, ROOMNAME, ROOMROW, ROOMCOLUMN, DEFAULTSEAT)
VALUES('ROOM' || LPAD(SEQ_ROOMNO.NEXTVAL, 4, 0), 'A305', 6, 3, '111111111111111111');
INSERT INTO CLASSROOM (ROOMNO, ROOMNAME, ROOMROW, ROOMCOLUMN, DEFAULTSEAT)
VALUES('ROOM' || LPAD(SEQ_ROOMNO.NEXTVAL, 4, 0), 'B402', 3, 3, '111111111');
INSERT INTO CLASSROOM (ROOMNO, ROOMNAME, ROOMROW, ROOMCOLUMN, DEFAULTSEAT)
VALUES('ROOM' || LPAD(SEQ_ROOMNO.NEXTVAL, 4, 0), 'B501', 3, 4, '111111111111');
INSERT INTO CLASSROOM (ROOMNO, ROOMNAME, ROOMROW, ROOMCOLUMN, DEFAULTSEAT)
VALUES('ROOM' || LPAD(SEQ_ROOMNO.NEXTVAL, 4, 0), 'B502', 5, 3, '111111111111111');
INSERT INTO CLASSROOM (ROOMNO, ROOMNAME, ROOMROW, ROOMCOLUMN, DEFAULTSEAT)
VALUES('ROOM' || LPAD(SEQ_ROOMNO.NEXTVAL, 4, 0), 'A102', 5, 5, '1111111111111111111111111');
-- ==================== #8 講者 SPEAKER ====================
INSERT INTO SPEAKER (SPKRNO, SPKRNAME, SPKRPHONE, SPKREMAIL)
VALUES('SPKR' || LPAD(SEQ_SPKRNO.NEXTVAL, 4, 0), '哈利波特', '0963135246','harry@hotmail.com');
INSERT INTO SPEAKER (SPKRNO, SPKRNAME, SPKRPHONE, SPKREMAIL)
VALUES('SPKR' || LPAD(SEQ_SPKRNO.NEXTVAL, 4, 0), '榮恩衛斯理', '0937821359','ron@gmail.com');
INSERT INTO SPEAKER (SPKRNO, SPKRNAME, SPKRPHONE, SPKREMAIL)
VALUES('SPKR' || LPAD(SEQ_SPKRNO.NEXTVAL, 4, 0), '妙麗格蘭傑', '0913586878','hermione@gmail.com');
INSERT INTO SPEAKER (SPKRNO, SPKRNAME, SPKRPHONE, SPKREMAIL)
VALUES('SPKR' || LPAD(SEQ_SPKRNO.NEXTVAL, 4, 0), '跩哥馬份', '0913555688','draco@gmail.com');
INSERT INTO SPEAKER (SPKRNO, SPKRNAME, SPKRPHONE, SPKREMAIL)
VALUES('SPKR' || LPAD(SEQ_SPKRNO.NEXTVAL, 4, 0), '金妮衛斯理', '0922581234','ginny@gmail.com');
INSERT INTO SPEAKER (SPKRNO, SPKRNAME, SPKRPHONE, SPKREMAIL)
VALUES('SPKR' || LPAD(SEQ_SPKRNO.NEXTVAL, 4, 0), '鄧不利多', '0913586878','dumbledore@gmail.com');
INSERT INTO SPEAKER (SPKRNO, SPKRNAME, SPKRPHONE, SPKREMAIL)
VALUES('SPKR' || LPAD(SEQ_SPKRNO.NEXTVAL, 4, 0), '石內卜', '0954659321','snape@gmail.com');
INSERT INTO SPEAKER (SPKRNO, SPKRNAME, SPKRPHONE, SPKREMAIL)
VALUES('SPKR' || LPAD(SEQ_SPKRNO.NEXTVAL, 4, 0), '芽菜教授', '0972666333','plant@gmail.com');
-- ==================== #9 講座 LECTURE ====================
INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECSTATUS, LECLMOD)
VALUES ('LEC0001','講座一',300,'SPKR0001','ROOM0001',
to_timestamp('07-NOV-20 03.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('07-NOV-20 05.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
to_timestamp('06-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('06-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
'111111111','111221111',1,to_timestamp('18-OCT-20 05.02.54.956738000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECSTATUS, LECLMOD)
VALUES ('LEC0002','講座二',220,'SPKR0002','ROOM0004',
to_timestamp('06-NOV-20 07.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('06-NOV-20 08.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
to_timestamp('06-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('05-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
'111110011111','111120011111',1,to_timestamp('18-OCT-20 05.12.44.526610000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECSTATUS, LECLMOD)
VALUES ('LEC0003','講座三',400,'SPKR0003','ROOM0002',
to_timestamp('02-NOV-20 08.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('02-NOV-20 09.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
to_timestamp('02-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('01-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
'101101101101101101','101101101101101101',1,to_timestamp('18-OCT-20 05.14.30.773216000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECSTATUS, LECLMOD)
VALUES ('LEC0004','講座四',900,'SPKR0004','ROOM0003',
to_timestamp('11-NOV-20 11.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('12-NOV-20 01.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
to_timestamp('11-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('10-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
'101010101','202010101',1,to_timestamp('18-OCT-20 05.17.29.392846000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECSTATUS, LECLMOD)
VALUES ('LEC0005','講座五',180,'SPKR0005','ROOM0001',
to_timestamp('17-NOV-20 08.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('17-NOV-20 09.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
to_timestamp('17-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('16-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
'111111000','111122000',1,to_timestamp('18-OCT-20 05.19.39.705008000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECSTATUS, LECLMOD)
VALUES('LEC0006','講座六',600,'SPKR0002','ROOM0001',to_timestamp('21-NOV-20 10.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('21-NOV-20 12.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
to_timestamp('21-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('20-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
'111101111','111101111',1,to_timestamp('20-OCT-20 05.22.23.402000000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECSTATUS, LECLMOD)
VALUES ('LEC0007','講座七',360,'SPKR0007','ROOM0002',to_timestamp('21-NOV-20 06.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('21-NOV-20 08.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
to_timestamp('21-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('21-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
'011101110011101110','022102110011201220',1,to_timestamp('20-OCT-20 05.24.40.623000000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECSTATUS, LECLMOD)
VALUES ('LEC0008','講座八',150,'SPKR0001','ROOM0001',to_timestamp('02-DEC-20 05.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('02-DEC-20 08.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
to_timestamp('02-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('01-DEC-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
'111111111','111111111',1,to_timestamp('20-OCT-20 05.25.58.554000000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECSTATUS, LECLMOD)
VALUES ('LEC0009','講座九',420,'SPKR0008','ROOM0004',to_timestamp('07-DEC-20 10.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('07-DEC-20 11.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
to_timestamp('07-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('06-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
'100110011111','200120012111',1,to_timestamp('20-OCT-20 05.27.46.337000000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECSTATUS, LECLMOD)
VALUES ('LEC0010','講座十',299,'SPKR0003','ROOM0006',to_timestamp('17-DEC-20 09.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('17-DEC-20 12.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
to_timestamp('17-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('16-DEC-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
'1111110101111111010111111','1111110201112221010111111',1,to_timestamp('20-OCT-20 05.29.44.723000000 PM','DD-MON-RR HH.MI.SSXFF AM'));
-- ==================== #10 講座訂單 LEC_ORDER ====================
INSERT INTO LEC_ORDER (LODRNO, MEMNO, LECNO, LECAMT, LODRSEAT, LODRSTATUS, LODRTIME, LODRLMOD)
VALUES ('LODR0001','MEM0003','LEC0004',1800,'202010101',
'已付款',to_timestamp('20-OCT-20 05.42.44.472000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('20-OCT-20 05.42.44.472000000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LEC_ORDER (LODRNO, MEMNO, LECNO, LECAMT, LODRSEAT, LODRSTATUS, LODRTIME, LODRLMOD)
VALUES ('LODR0002','MEM0002','LEC0005',360,'111122000',
'已付款',to_timestamp('20-OCT-20 05.42.57.979000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('20-OCT-20 05.42.57.979000000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LEC_ORDER (LODRNO, MEMNO, LECNO, LECAMT, LODRSEAT, LODRSTATUS, LODRTIME, LODRLMOD)
VALUES ('LODR0003','MEM0001','LEC0002',220,'111120011111',
'已付款',to_timestamp('20-OCT-20 05.43.53.521000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('20-OCT-20 05.43.53.521000000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LEC_ORDER (LODRNO, MEMNO, LECNO, LECAMT, LODRSEAT, LODRSTATUS, LODRTIME, LODRLMOD)
VALUES ('LODR0004','MEM0001','LEC0007',1080,'022102110011101110',
'已付款',to_timestamp('20-OCT-20 06.56.16.311000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('20-OCT-20 06.56.16.311000000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LEC_ORDER (LODRNO, MEMNO, LECNO, LECAMT, LODRSEAT, LODRSTATUS, LODRTIME, LODRLMOD)
VALUES ('LODR0005','MEM0001','LEC0010',1196,'1111110201112221010111111',
'已付款',to_timestamp('20-OCT-20 07.05.45.445000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('20-OCT-20 07.05.45.445000000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LEC_ORDER (LODRNO, MEMNO, LECNO, LECAMT, LODRSEAT, LODRSTATUS, LODRTIME, LODRLMOD)
VALUES ('LODR0006','MEM0006','LEC0009',1260,'200120012111',
'已付款',to_timestamp('20-OCT-20 07.06.23.321000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('20-OCT-20 07.06.23.321000000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LEC_ORDER (LODRNO, MEMNO, LECNO, LECAMT, LODRSEAT, LODRSTATUS, LODRTIME, LODRLMOD)
VALUES ('LODR0007','MEM0004','LEC0007',1080,'011101110011201220',
'已付款',to_timestamp('20-OCT-20 07.08.47.125000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('20-OCT-20 07.08.47.125000000 PM','DD-MON-RR HH.MI.SSXFF AM'));

INSERT INTO LEC_ORDER (LODRNO, MEMNO, LECNO, LECAMT, LODRSEAT, LODRSTATUS, LODRTIME, LODRLMOD)
VALUES ('LODR0008','MEM0007','LEC0001',600,'111221111',
'已付款',to_timestamp('20-OCT-20 07.09.28.471000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('20-OCT-20 07.09.28.471000000 PM','DD-MON-RR HH.MI.SSXFF AM'));
---- ==================== #11 講座定位明細 LEC_SEAT ====================
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0001','A1','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0001','A3','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0002','B2','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0002','B3','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0003','B1','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0004','A2','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0004','A3','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0004','B3','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0005','B3','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0005','C3','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0005','C4','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0005','C5','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0006','A1','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0006','B1','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0006','C1','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0007','E1','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0007','F1','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0007','F2','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0008','B1','正常');
INSERT INTO LEC_SEAT (LODRNO, SEATNO, SEATSTATUS) VALUES ('LODR0008','B2','正常');
-- ==================== #12 課程種類 COURSE_TYPE ====================
INSERT INTO COURSE_TYPE VALUES ('TYPE' || LPAD(SEQ_CSTYPE.NEXTVAL, 4, 0),'數學');
INSERT INTO COURSE_TYPE VALUES ('TYPE' || LPAD(SEQ_CSTYPE.NEXTVAL, 4, 0),'自然');
INSERT INTO COURSE_TYPE VALUES ('TYPE' || LPAD(SEQ_CSTYPE.NEXTVAL, 4, 0),'英文');
INSERT INTO COURSE_TYPE VALUES ('TYPE' || LPAD(SEQ_CSTYPE.NEXTVAL, 4, 0),'國文');
INSERT INTO COURSE_TYPE VALUES ('TYPE' || LPAD(SEQ_CSTYPE.NEXTVAL, 4, 0),'日文');
INSERT INTO COURSE_TYPE VALUES ('TYPE' || LPAD(SEQ_CSTYPE.NEXTVAL, 4, 0),'程式');
-- ==================== #13 課程 COURSE ====================
INSERT INTO COURSE VALUES ('COUR' || LPAD(SEQ_CS.NEXTVAL, 4, 0),'TYPE0006','TCHR0007','什麼是HTML','HTML基礎知識介紹',1970,6000,'審核中',82,20, EMPTY_BLOB(),CURRENT_TIMESTAMP);
INSERT INTO COURSE VALUES ('COUR' || LPAD(SEQ_CS.NEXTVAL, 4, 0),'TYPE0001','TCHR0001','微積分','',3000,800,'上架',600,300, EMPTY_BLOB(),CURRENT_TIMESTAMP);
INSERT INTO COURSE VALUES ('COUR' || LPAD(SEQ_CS.NEXTVAL, 4, 0),'TYPE0002','TCHR0004','量子物理','',2500,600,'上架',400,200, EMPTY_BLOB(),CURRENT_TIMESTAMP);
INSERT INTO COURSE VALUES ('COUR' || LPAD(SEQ_CS.NEXTVAL, 4, 0),'TYPE0001','TCHR0001','應用數學','',1300,300,'上架',800,200, EMPTY_BLOB(),CURRENT_TIMESTAMP);
INSERT INTO COURSE VALUES ('COUR' || LPAD(SEQ_CS.NEXTVAL, 4, 0),'TYPE0003','TCHR0002','英文口說','',1000,600,'下架',100,100, EMPTY_BLOB(),CURRENT_TIMESTAMP);
INSERT INTO COURSE VALUES ('COUR' || LPAD(SEQ_CS.NEXTVAL, 4, 0),'TYPE0004','TCHR0003','國文寫作','',600,600,'上架',200,100, EMPTY_BLOB(),CURRENT_TIMESTAMP);
-- ==================== #14 課程影片 VIDEO ====================
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0001', 1, 1, '5.1_什麼是_HTML', 66, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0001', 1, 2, '5.2_建立你的第一個網頁', 66, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0001', 1, 3, '5.3_HTML_文件的架構', 66, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0001', 2, 4, '5.4_認識_HTML_元素', 66, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0001', 2, 5, '5.5_HTML_元素的結構', 66, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0001', 2, 6, '5.6_HTML_的絕對路徑與相對路徑', 66, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0001', 3, 7, '5.7_CSS_如何跟_HTML_搭配使用', 66, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0001', 3, 8, '5.8_在_html_中使用_javascript', 66, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0001', 3, 9, '5.9_Semantic_語意化', 66, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0001', 3, 10, '5.10_作業_Free_Code_Camp', 66, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0002', 1, 1, '微分1', 200, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0002', 1, 2, '微分2', 200, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0003', 1, 1, '古典物理簡介', 200, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0004', 2, 4, '微分', 150, EMPTY_BLOB());
INSERT INTO VIDEO VALUES ('VID' || LPAD(SEQ_VIDEO.NEXTVAL, 4, 0),'COUR0005', 3, 5, '日常會話', 300, EMPTY_BLOB());
-- ==================== #15 觀看進度 VIDEO_BAR ====================
INSERT INTO VIDEO_BAR (MEMNO, VIDEONO, VIDEOSEC, VIDEOTTLTIME) VALUES('MEM0001', 'VID0001', 200, 200);
INSERT INTO VIDEO_BAR (MEMNO, VIDEONO, VIDEOSEC, VIDEOTTLTIME) VALUES('MEM0001', 'VID0002', 200, 200);
INSERT INTO VIDEO_BAR (MEMNO, VIDEONO, VIDEOSEC, VIDEOTTLTIME) VALUES('MEM0001', 'VID0003', 200, 200);
INSERT INTO VIDEO_BAR (MEMNO, VIDEONO, VIDEOSEC, VIDEOTTLTIME) VALUES('MEM0001', 'VID0004', 150, 150);
INSERT INTO VIDEO_BAR (MEMNO, VIDEONO, VIDEOSEC, VIDEOTTLTIME) VALUES('MEM0002', 'VID0001', 100, 125);
INSERT INTO VIDEO_BAR (MEMNO, VIDEONO, VIDEOSEC, VIDEOTTLTIME) VALUES('MEM0002', 'VID0002', 32, 150);
INSERT INTO VIDEO_BAR (MEMNO, VIDEONO, VIDEOSEC, VIDEOTTLTIME) VALUES('MEM0003', 'VID0004', 53, 150);
INSERT INTO VIDEO_BAR (MEMNO, VIDEONO, VIDEOSEC, VIDEOTTLTIME) VALUES('MEM0003', 'VID0005', 52, 150);
INSERT INTO VIDEO_BAR (MEMNO, VIDEONO, VIDEOSEC, VIDEOTTLTIME) VALUES('MEM0004', 'VID0002', 75, 213);
INSERT INTO VIDEO_BAR (MEMNO, VIDEONO, VIDEOSEC, VIDEOTTLTIME) VALUES('MEM0004', 'VID0003', 42, 233);
INSERT INTO VIDEO_BAR (MEMNO, VIDEONO, VIDEOSEC, VIDEOTTLTIME) VALUES('MEM0004', 'VID0004', 64, 89);
INSERT INTO VIDEO_BAR (MEMNO, VIDEONO, VIDEOSEC, VIDEOTTLTIME) VALUES('MEM0006', 'VID0002', 68, 77);
-- ==================== #16 課程附件 COURSE_ATTACH ====================
INSERT INTO COURSE_ATTACH (ATTNO, COURSENO) VALUES('ATT' || LPAD(SEQ_ATTNO.NEXTVAL, 4, 0), 'COUR0001');
-- ==================== #17 評價 COURSE_ASSESS ====================
INSERT INTO COURSE_ASSESS (ASESNO, COURSENO, MEMNO, COURSESCORE, COMMENTS) VALUES('ASES' || LPAD(SEQ_ASESNO.NEXTVAL, 4, 0), 'COUR0001', 'MEM0001', 5, '好爛好無聊哦');
-- ==================== #18 留言板貼文 POSTS ====================
INSERT INTO POSTS (POSTNO, COURSENO, MEMNO, POSTCONTENT) VALUES('POST' || LPAD(SEQ_POSTNO.NEXTVAL, 4, 0), 'COUR0001', 'MEM0001', '安安哩賀');
INSERT INTO POSTS (POSTNO, SUPERPOSTNO, COURSENO, MEMNO, POSTCONTENT) VALUES('POST' || LPAD(SEQ_POSTNO.NEXTVAL, 4, 0), 'POST0001', 'COUR0001', 'MEM0001', '抱歉錯頻');
-- ==================== #19 留言板檢舉明細 REPORT_DETAIL ====================
INSERT INTO REPORT_DETAIL (REPORTNO, MEMNO, POSTNO) VALUES('REPO' || LPAD(SEQ_REPORTNO.NEXTVAL, 4, 0), 'MEM0001', 'POST0001');
-- ==================== #20 優惠活動表 PROMO_LIST ====================
INSERT INTO PROMO_LIST VALUES ('PROM' || LPAD(SEQ_PROM.NEXTVAL, 4, 0),'教師節活動',TO_DATE('2020-08-30','YYYY-MM-DD'),TO_DATE('2020-09-30','YYYY-MM-DD'),'歡慶教師節');
INSERT INTO PROMO_LIST VALUES ('PROM' || LPAD(SEQ_PROM.NEXTVAL, 4, 0),'雙十節活動',TO_DATE('2020-10-01','YYYY-MM-DD'),TO_DATE('2020-10-20','YYYY-MM-DD'),'歡慶雙十節');
INSERT INTO PROMO_LIST VALUES ('PROM' || LPAD(SEQ_PROM.NEXTVAL, 4, 0),'雙十一活動',TO_DATE('2020-11-10','YYYY-MM-DD'),TO_DATE('2020-11-11','YYYY-MM-DD'),'歡慶雙十一');
-- ==================== #21 優惠活動明細 PROMO_DETAIL ====================
INSERT INTO PROMO_DETAIL VALUES ('PROM0001','TYPE0004',80);
INSERT INTO PROMO_DETAIL VALUES ('PROM0002','TYPE0001',80);
INSERT INTO PROMO_DETAIL VALUES ('PROM0002','TYPE0002',80);
INSERT INTO PROMO_DETAIL VALUES ('PROM0003','TYPE0003',80);
INSERT INTO PROMO_DETAIL VALUES ('PROM0003','TYPE0004',80);
-- ==================== #22 折扣碼優惠 COUP_CODE ====================
INSERT INTO COUP_CODE VALUES ('COUP' || LPAD(SEQ_COUP_CODE.NEXTVAL, 4, 0),'MEM0004','XXXX-ZXCV',150,1,TO_DATE('2020-09-02','YYYY-MM-DD'),TO_DATE('2020-09-16','YYYY-MM-DD'));
INSERT INTO COUP_CODE VALUES ('COUP' || LPAD(SEQ_COUP_CODE.NEXTVAL, 4, 0),'MEM0002','AXXX-ZXCV',150,1,TO_DATE('2020-09-02','YYYY-MM-DD'),TO_DATE('2020-09-16','YYYY-MM-DD'));
INSERT INTO COUP_CODE VALUES ('COUP' || LPAD(SEQ_COUP_CODE.NEXTVAL, 4, 0),'MEM0003','VXXX-ZXCV',150,1,TO_DATE('2020-09-02','YYYY-MM-DD'),TO_DATE('2020-09-16','YYYY-MM-DD'));
INSERT INTO COUP_CODE VALUES ('COUP' || LPAD(SEQ_COUP_CODE.NEXTVAL, 4, 0),'MEM0004','QXXX-ZXCV',150,1,TO_DATE('2020-09-02','YYYY-MM-DD'),TO_DATE('2020-09-16','YYYY-MM-DD'));
INSERT INTO COUP_CODE VALUES ('COUP' || LPAD(SEQ_COUP_CODE.NEXTVAL, 4, 0),'MEM0002','GXXX-ZXCV',150,1,TO_DATE('2020-09-02','YYYY-MM-DD'),TO_DATE('2020-09-16','YYYY-MM-DD'));
-- ==================== #23 課程訂單主檔 ORDER_MASTER ====================
INSERT INTO ORDER_MASTER VALUES ('ORD' || LPAD(SEQ_ORDER_MASTER.NEXTVAL, 4, 0),'MEM0001',TO_DATE('2020-07-05 21:00:00','YYYY-MM-DD hh24:mi:ss'),'未付款',3000,'','信用卡');
INSERT INTO ORDER_MASTER VALUES ('ORD' || LPAD(SEQ_ORDER_MASTER.NEXTVAL, 4, 0),'MEM0002',TO_DATE('2020-08-02','YYYY-MM-DD'),'失效訂單',2500,'','信用卡');
INSERT INTO ORDER_MASTER VALUES ('ORD' || LPAD(SEQ_ORDER_MASTER.NEXTVAL, 4, 0),'MEM0003',TO_DATE('2020-09-12','YYYY-MM-DD'),'未付款',2800,'','信用卡');
INSERT INTO ORDER_MASTER VALUES ('ORD' || LPAD(SEQ_ORDER_MASTER.NEXTVAL, 4, 0),'MEM0001',TO_DATE('2020-09-21','YYYY-MM-DD'),'未付款',2800,'','信用卡');
INSERT INTO ORDER_MASTER VALUES ('ORD' || LPAD(SEQ_ORDER_MASTER.NEXTVAL, 4, 0),'MEM0004',CURRENT_TIMESTAMP,'未付款',2800,'','信用卡');
-- ==================== #24 課程訂單明細 ORDER_DETAIL ====================
INSERT INTO ORDER_DETAIL VALUES ('ORD0001','COUR0001',3000,'鑑賞期','');
INSERT INTO ORDER_DETAIL VALUES ('ORD0001','COUR0003',1300,'鑑賞期','');
INSERT INTO ORDER_DETAIL VALUES ('ORD0002','COUR0001',3000,'鑑賞期','');
INSERT INTO ORDER_DETAIL VALUES ('ORD0003','COUR0002',2500,'鑑賞期','');
INSERT INTO ORDER_DETAIL VALUES ('ORD0004','COUR0004',1000,'鑑賞期','');
INSERT INTO ORDER_DETAIL VALUES ('ORD0005','COUR0005',600,'鑑賞期','');
-- ==================== #25 追蹤清單 TRACKING_LIST ====================
INSERT INTO TRACKING_LIST VALUES ('MEM0004','COUR0001');
-- ==================== #26 題型難易度 TEST_TYPE ====================
INSERT INTO TEST_TYPE(TESTTYPENO,TESTTYPE,TESTDGEE)VALUES(SEQ_TSTYPE.nextval,'text','簡單');
INSERT INTO TEST_TYPE(TESTTYPENO,TESTTYPE,TESTDGEE)VALUES(SEQ_TSTYPE.nextval,'text','中等');
INSERT INTO TEST_TYPE(TESTTYPENO,TESTTYPE,TESTDGEE)VALUES(SEQ_TSTYPE.nextval,'text','困難');
INSERT INTO TEST_TYPE(TESTTYPENO,TESTTYPE,TESTDGEE)VALUES(SEQ_TSTYPE.nextval,'radio','簡單');
INSERT INTO TEST_TYPE(TESTTYPENO,TESTTYPE,TESTDGEE)VALUES(SEQ_TSTYPE.nextval,'radio','中等');
INSERT INTO TEST_TYPE(TESTTYPENO,TESTTYPE,TESTDGEE)VALUES(SEQ_TSTYPE.nextval,'radio','困難');
INSERT INTO TEST_TYPE(TESTTYPENO,TESTTYPE,TESTDGEE)VALUES(SEQ_TSTYPE.nextval,'checkbox','簡單');
INSERT INTO TEST_TYPE(TESTTYPENO,TESTTYPE,TESTDGEE)VALUES(SEQ_TSTYPE.nextval,'checkbox','中等');
INSERT INTO TEST_TYPE(TESTTYPENO,TESTTYPE,TESTDGEE)VALUES(SEQ_TSTYPE.nextval,'checkbox','困難');
-- ==================== #27 題庫 QUESTION_BANK ====================
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',1,1,'多條件分支的 switch 指令中用來捕捉條件運算式與所有 case 條件值都不相符的狀況的指令是','default');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',1,1,'do-while 與 while 指令最大的差別在 ____ 指令會至少執行一次','do-while');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',1,1,'在巢狀迴圈裡，要從最內層的迴圈跳出最外層的迴圈必須使用 break 指令及為迴圈加上__ ','標籤');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',1,1,'程式中要讀取陣列裡元素的資料必須要靠___。 ','索引值 (index)');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',1,1,'陣列的使用必須先經過宣告與配置，其中陣列的配置必須使用____運算子。 ','new');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',1,1,'要知道一個一維陣列的元素個數可以藉由陣列的____屬性得知。 ','length');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',1,1,'參照型別的特性是____資料, 而不是直接使用變數的內容 ','間接存取');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',1,1,'參照型別的變數所儲存的是存放真正資料的 ____。 ','記憶體位址');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',1,1,'為了避免沒有閒置的記憶體空間可用的情況, Java 設計了一個特別的機制, 可以將已經閒置不再需要使用的記憶體空間回收, 以便供後續需要時使用。這個機制就稱為____。 ','資源回收系統');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',1,1,' ____是用來幫助 JAVA 對記憶體做有效清理及管控的機制。 ','參照計數(reference count)');
--
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',2,1,'多條件分支的 switch 指令中用來捕捉條件運算式與所有 case 條件值都不相符的狀況的指令是','default');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',2,1,'do-while 與 while 指令最大的差別在 ____ 指令會至少執行一次','do-while');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',2,1,'在巢狀迴圈裡，要從最內層的迴圈跳出最外層的迴圈必須使用 break 指令及為迴圈加上__ ','標籤');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',2,1,'程式中要讀取陣列裡元素的資料必須要靠___。 ','索引值 (index)');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',2,1,'陣列的使用必須先經過宣告與配置，其中陣列的配置必須使用____運算子。 ','new');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',2,1,'要知道一個一維陣列的元素個數可以藉由陣列的____屬性得知。 ','length');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',2,1,'參照型別的特性是____資料, 而不是直接使用變數的內容 ','間接存取');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',2,1,'參照型別的變數所儲存的是存放真正資料的 ____。 ','記憶體位址');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',2,1,'為了避免沒有閒置的記憶體空間可用的情況, Java 設計了一個特別的機制, 可以將已經閒置不再需要使用的記憶體空間回收, 以便供後續需要時使用。這個機制就稱為____。 ','資源回收系統');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',2,1,' ____是用來幫助 JAVA 對記憶體做有效清理及管控的機制。 ','參照計數(reference count)');
--
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',3,1,'多條件分支的 switch 指令中用來捕捉條件運算式與所有 case 條件值都不相符的狀況的指令是','default');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',3,1,'do-while 與 while 指令最大的差別在 ____ 指令會至少執行一次','do-while');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',3,1,'在巢狀迴圈裡，要從最內層的迴圈跳出最外層的迴圈必須使用 break 指令及為迴圈加上__ ','標籤');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',3,1,'程式中要讀取陣列裡元素的資料必須要靠___。 ','索引值 (index)');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',3,1,'陣列的使用必須先經過宣告與配置，其中陣列的配置必須使用____運算子。 ','new');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',3,1,'要知道一個一維陣列的元素個數可以藉由陣列的____屬性得知。 ','length');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',3,1,'參照型別的特性是____資料, 而不是直接使用變數的內容 ','間接存取');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',3,1,'參照型別的變數所儲存的是存放真正資料的 ____。 ','記憶體位址');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',3,1,'為了避免沒有閒置的記憶體空間可用的情況, Java 設計了一個特別的機制, 可以將已經閒置不再需要使用的記憶體空間回收, 以便供後續需要時使用。這個機制就稱為____。 ','資源回收系統');
INSERT INTO QUESTION_BANK(QBANKNO,COURSENO,TESTTYPENO,TESTSCOPE,QUSTMT,QUANS)VALUES('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0),'COUR0001',3,1,' ____是用來幫助 JAVA 對記憶體做有效清理及管控的機制。 ','參照計數(reference count)');

--
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 4 ,1, '類別的成員變數如果含有下列哪一個修飾字就稱為類別變數?' , 'member' ,'static','public','void','0100',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 4 ,1, '我們使用Java語言的哪一個關鍵字來產生物件?' , 'instance' ,'create','alloc','new','0001',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 4 ,1, '程式中若要使用物件的屬性與方法，必須透過：' , '關鍵字object' ,'含有該物件的參考變數','不需透過任何關鍵字，直接使用即可','該物件的類別名稱','0100',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 4 ,1, '在同一個類別之內，方法名稱相同，但參數樣式不同的所有方法稱為何種方法?' , 'Override method' ,'Overload method','Overcome method','Overwrite method','0100',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 4 ,1, '下列敘述，何者錯誤? 它們皆為與陣列有關的敘述。' , 'int[] iArray = new int[10]; 定義了一個含有10個元素的陣列，元素的型別為int。' ,'在程式內使用一維陣列之元素時，需要一個索引值(index)。','Java陣列的元素沒有預設的初值。','陣列的最大優點在於只要使用陣列名稱與索引值(index)就可以存取其內的元素。','0010',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 4 ,1, '所有Java類別的共同父類別為:' , 'java.lang.Root' ,'java.lang.Object','java.lang.Class','java.lang.Super','0100',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 4 ,1, '下列哪一個關鍵字是用來表示『目前這個物件』?' , 'private' ,'self','instanceof','this','0001',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0), 'COUR0001' , 4 , 1,'下列哪一個類別的定義能夠表示Snake類別(蛇)是Reptile類別(爬蟲類)的子類別？' , 'public class Reptile extends Snake {...}' ,'public class Snake implements Reptile {...}','public class Snake extends Reptile {...}','public class Reptile implements Snake {...}','0010',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 4 ,1, '有關介面(interface)的敘述下列何者錯誤：' , '實作介面的類別不需要Override介面所定義的方法，因為介面的方法都有方法的本體' ,'介面內的變數預設具有public, static, final三個修飾字，因此介面內的變數實為常數','介面內的方法預設具有public, abstract兩個修飾字','通常介面是讓一組無法找到共同祖先的類別來實作，以便讓這一組類別具有共同的行為，這些類別的物件就可送到同一個方法去處理，簡化程式的設計','1000',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 4 ,1, '下列哪一種不可以是Java變數命名的開頭?' , '$(錢字號)' ,'英文字母','_(底線)','@(小老鼠)','0001',1);

INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 5 , 1,'類別的成員變數如果含有下列哪一個修飾字就稱為類別變數?' , 'member' ,'static','public','void','0100',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 5 ,1, '我們使用Java語言的哪一個關鍵字來產生物件?' , 'instance' ,'create','alloc','new','0001',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 5 , 1,'程式中若要使用物件的屬性與方法，必須透過：' , '關鍵字object' ,'含有該物件的參考變數','不需透過任何關鍵字，直接使用即可','該物件的類別名稱','0100',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 5 ,1, '在同一個類別之內，方法名稱相同，但參數樣式不同的所有方法稱為何種方法?' , 'Override method' ,'Overload method','Overcome method','Overwrite method','0100',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 5 , 1,'下列敘述，何者錯誤? 它們皆為與陣列有關的敘述。' , 'int[] iArray = new int[10]; 定義了一個含有10個元素的陣列，元素的型別為int。' ,'在程式內使用一維陣列之元素時，需要一個索引值(index)。','Java陣列的元素沒有預設的初值。','陣列的最大優點在於只要使用陣列名稱與索引值(index)就可以存取其內的元素。','0010',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 5 ,1, '所有Java類別的共同父類別為:' , 'java.lang.Root' ,'java.lang.Object','java.lang.Class','java.lang.Super','0100',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 5 ,1, '下列哪一個關鍵字是用來表示『目前這個物件』?' , 'private' ,'self','instanceof','this','0001',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0), 'COUR0001' , 5 ,1, '下列哪一個類別的定義能夠表示Snake類別(蛇)是Reptile類別(爬蟲類)的子類別？' , 'public class Reptile extends Snake {...}' ,'public class Snake implements Reptile {...}','public class Snake extends Reptile {...}','public class Reptile implements Snake {...}','0010',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 5 ,1, '有關介面(interface)的敘述下列何者錯誤：' , '實作介面的類別不需要Override介面所定義的方法，因為介面的方法都有方法的本體' ,'介面內的變數預設具有public, static, final三個修飾字，因此介面內的變數實為常數','介面內的方法預設具有public, abstract兩個修飾字','通常介面是讓一組無法找到共同祖先的類別來實作，以便讓這一組類別具有共同的行為，這些類別的物件就可送到同一個方法去處理，簡化程式的設計','1000',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 5 , 1,'下列哪一種不可以是Java變數命名的開頭?' , '$(錢字號)' ,'英文字母','_(底線)','@(小老鼠)','0001',1);

INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 6 ,1, '類別的成員變數如果含有下列哪一個修飾字就稱為類別變數?' , 'member' ,'static','public','void','0100',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 6 , 1,'我們使用Java語言的哪一個關鍵字來產生物件?' , 'instance' ,'create','alloc','new','0001',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 6, 1,'程式中若要使用物件的屬性與方法，必須透過：' , '關鍵字object' ,'含有該物件的參考變數','不需透過任何關鍵字，直接使用即可','該物件的類別名稱','0100',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 6 ,1, '在同一個類別之內，方法名稱相同，但參數樣式不同的所有方法稱為何種方法?' , 'Override method' ,'Overload method','Overcome method','Overwrite method','0100',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 6 , 1,'下列敘述，何者錯誤? 它們皆為與陣列有關的敘述。' , 'int[] iArray = new int[10]; 定義了一個含有10個元素的陣列，元素的型別為int。' ,'在程式內使用一維陣列之元素時，需要一個索引值(index)。','Java陣列的元素沒有預設的初值。','陣列的最大優點在於只要使用陣列名稱與索引值(index)就可以存取其內的元素。','0010',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 6 , 1,'所有Java類別的共同父類別為:' , 'java.lang.Root' ,'java.lang.Object','java.lang.Class','java.lang.Super','0100',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 6 , 1,'下列哪一個關鍵字是用來表示『目前這個物件』?' , 'private' ,'self','instanceof','this','0001',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0), 'COUR0001' , 6 , 1,'下列哪一個類別的定義能夠表示Snake類別(蛇)是Reptile類別(爬蟲類)的子類別？' , 'public class Reptile extends Snake {...}' ,'public class Snake implements Reptile {...}','public class Snake extends Reptile {...}','public class Reptile implements Snake {...}','0010',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 6 ,1, '有關介面(interface)的敘述下列何者錯誤：' , '實作介面的類別不需要Override介面所定義的方法，因為介面的方法都有方法的本體' ,'介面內的變數預設具有public, static, final三個修飾字，因此介面內的變數實為常數','介面內的方法預設具有public, abstract兩個修飾字','通常介面是讓一組無法找到共同祖先的類別來實作，以便讓這一組類別具有共同的行為，這些類別的物件就可送到同一個方法去處理，簡化程式的設計','1000',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 6 , 1,'下列哪一種不可以是Java變數命名的開頭?' , '$(錢字號)' ,'英文字母','_(底線)','@(小老鼠)','0001',1);


INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 7 , 1,'下面能讓執行緒停止執行的有' , ' sleep();' ,'stop();','notify()','synchronized();','1111',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 7 ,1, '不能用來修飾interface的有' , ' private' ,'public','protected','static','1011',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 7 , 1,'下列說法錯誤的有' , ' 在類方法中可用this來呼叫本類的類方法' ,'在類方法中呼叫本類的類方法時可直接呼叫','在類方法中只能呼叫本類中的類方法','在類方法中絕對不能呼叫例項方法','1011',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 7 ,1, '如下哪些不是java的關鍵字？' , 'const','NULL','false','this ','0110',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 7 ,1, '有關執行緒的哪些敘述是對的' , ' 一旦一個執行緒被建立，它就立即開始執行。' ,'使用start()方法可以使一個執行緒成為可執行的，但是它不一定立即開始執行','當一個執行緒因為搶先機制而停止執行，它被放在可執行佇列的前面','一個執行緒可能因為不同的原因停止並進入就緒狀態','0111',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 7 ,1, '下面的哪些宣告是合法的' , ' long 1 = 499' ,'int i = 4L','float f =1.1','double d = 34.4','1001',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 7 ,1, '選擇Java語言中的基本資料型別' , ' byte' ,'String','char','long','1011',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 7 ,1, '從下列選項中選擇正確的Java表示式' , ' int k=new String(“aa”)' ,'String str=String(“bb”)','char c=74;','long j=8888;','0111',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 7 , 1,'關於Java語言，下列描述正確的是' , ' switch 不能夠作用在String型別上' ,'List， Set， Map都繼承自Collection介面','Java語言支援goto語句','GC是垃圾收集器，程式設計師不用擔心記憶體管理','1001',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 7 , 1,'下列描述中，哪些符合Java語言的特徵' , ' 支援跨平臺(Windows，Linux，Unix等' ,'GC(自動垃圾回收)，提高了程式碼安全性','支援類C的指標運算操作','不支援與其它語言書寫的程式進行通訊','1100',1);

INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 8 ,1, '下面能讓執行緒停止執行的有' , ' sleep();' ,'stop();','notify()','synchronized();','1111',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 8 ,1, '不能用來修飾interface的有' , ' private' ,'public','protected','static','1011',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 8 ,1, '下列說法錯誤的有' , ' 在類方法中可用this來呼叫本類的類方法' ,'在類方法中呼叫本類的類方法時可直接呼叫','在類方法中只能呼叫本類中的類方法','在類方法中絕對不能呼叫例項方法','1011',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 8 ,1, '如下哪些不是java的關鍵字？' , 'const','NULL','false','this ','0110',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 8 ,1, '有關執行緒的哪些敘述是對的' , ' 一旦一個執行緒被建立，它就立即開始執行。' ,'使用start()方法可以使一個執行緒成為可執行的，但是它不一定立即開始執行','當一個執行緒因為搶先機制而停止執行，它被放在可執行佇列的前面','一個執行緒可能因為不同的原因停止並進入就緒狀態','0111',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 8 ,1, '下面的哪些宣告是合法的' , ' long 1 = 499' ,'int i = 4L','float f =1.1','double d = 34.4','1001',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 8 ,1, '選擇Java語言中的基本資料型別' , ' byte' ,'String','char','long','1011',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 8 ,1, '從下列選項中選擇正確的Java表示式' , ' int k=new String(“aa”)' ,'String str=String(“bb”)','char c=74;','long j=8888;','0111',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 8 ,1, '關於Java語言，下列描述正確的是' , ' switch 不能夠作用在String型別上' ,'List， Set， Map都繼承自Collection介面','Java語言支援goto語句','GC是垃圾收集器，程式設計師不用擔心記憶體管理','1001',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 8 ,1, '下列描述中，哪些符合Java語言的特徵' , ' 支援跨平臺(Windows，Linux，Unix等' ,'GC(自動垃圾回收)，提高了程式碼安全性','支援類C的指標運算操作','不支援與其它語言書寫的程式進行通訊','1100',1);

INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 9 ,1, '下面能讓執行緒停止執行的有' , ' sleep();' ,'stop();','notify()','synchronized();','1111',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 9 ,1, '不能用來修飾interface的有' , ' private' ,'public','protected','static','1011',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 9 ,1, '下列說法錯誤的有' , ' 在類方法中可用this來呼叫本類的類方法' ,'在類方法中呼叫本類的類方法時可直接呼叫','在類方法中只能呼叫本類中的類方法','在類方法中絕對不能呼叫例項方法','1011',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 9 ,1, '如下哪些不是java的關鍵字？' , 'const','NULL','false','this ','0110',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 9 ,1, '有關執行緒的哪些敘述是對的' , ' 一旦一個執行緒被建立，它就立即開始執行。' ,'使用start()方法可以使一個執行緒成為可執行的，但是它不一定立即開始執行','當一個執行緒因為搶先機制而停止執行，它被放在可執行佇列的前面','一個執行緒可能因為不同的原因停止並進入就緒狀態','0111',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 9 ,1, '下面的哪些宣告是合法的' , ' long 1 = 499' ,'int i = 4L','float f =1.1','double d = 34.4','1001',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 9 ,1, '選擇Java語言中的基本資料型別' , ' byte' ,'String','char','long','1011',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 9,1, '從下列選項中選擇正確的Java表示式' , ' int k=new String(“aa”)' ,'String str=String(“bb”)','char c=74;','long j=8888;','0111',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 9 ,1, '關於Java語言，下列描述正確的是' , ' switch 不能夠作用在String型別上' ,'List， Set， Map都繼承自Collection介面','Java語言支援goto語句','GC是垃圾收集器，程式設計師不用擔心記憶體管理','1001',1);
INSERT INTO QUESTION_BANK VALUES ('QNBK' || LPAD(SEQ_QBANK.NEXTVAL, 4, 0) , 'COUR0001' , 9 , 1,'下列描述中，哪些符合Java語言的特徵' , ' 支援跨平臺(Windows，Linux，Unix等' ,'GC(自動垃圾回收)，提高了程式碼安全性','支援類C的指標運算操作','不支援與其它語言書寫的程式進行通訊','1100',1);

-- ==================== #28 考卷 TESTS ====================
INSERT INTO TESTS VALUES('TEST' || LPAD(SEQ_TESTS.NEXTVAL, 4, 0),'COUR0001','MEM0001',2,60,TO_DATE('2020-09-20','YYYY-MM-DD'));
-- ==================== #29 考卷作答明細 ANSWER_LIST ====================
INSERT INTO ANSWER_LIST VALUES('ANS' || LPAD(SEQ_ANS.NEXTVAL, 4, 0),'TEST0001','QNBK0003',3,'1234','2','2');
SELECT * FROM QUESTION_BANK WHERE TESTTYPENO = 1;
COMMIT;
-- ==================== #28 考卷 TESTS ====================
INSERT INTO TESTS VALUES('TEST' || LPAD(SEQ_TESTS.NEXTVAL, 4, 0),'COUR0001','MEM0001',2,60,TO_DATE('2020-09-20','YYYY-MM-DD'));
-- ==================== #29 考卷作答明細 ANSWER_LIST ====================
INSERT INTO ANSWER_LIST VALUES('ANS' || LPAD(SEQ_ANS.NEXTVAL, 4, 0),'TEST0001','QNBK0003',3,'1234','2','2');

COMMIT;

-- #################### 備用註解欄 ####################

-- ==================== #1 會員 MEMBERS ====================
-- ==================== #2 老師 TEACHER ====================
-- ==================== #3 員工 EMPLOYEE ====================
-- ==================== #4 功能 FUNCTIONX ====================
-- ==================== #5 員工權限 EMP_AUTHORITY ====================
-- ==================== #6 聊天 CHATTING ====================
-- ==================== #7 教室 CLASSROOM ====================
-- ==================== #8 講者 SPEAKER ====================
-- ==================== #9 講座 LECTURE ====================
--INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECPIC, LECSTATUS, LECLMOD)
--VALUES ('LEC0001','講座一',300,'SPKR0001','ROOM0001',
--to_timestamp('07-NOV-20 03.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('07-NOV-20 05.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
--to_timestamp('06-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('06-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
--'111111111','111221111',load_blob('img1.jpg'),1,to_timestamp('18-OCT-20 05.02.54.956738000 PM','DD-MON-RR HH.MI.SSXFF AM'));
--
--INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECPIC, LECSTATUS, LECLMOD)
--VALUES ('LEC0002','講座二',220,'SPKR0002','ROOM0004',
--to_timestamp('06-NOV-20 07.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('06-NOV-20 08.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
--to_timestamp('06-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('05-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
--'111110011111','111120011111',load_blob('img2.jpg'),1,to_timestamp('18-OCT-20 05.12.44.526610000 PM','DD-MON-RR HH.MI.SSXFF AM'));
--
--INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECPIC, LECSTATUS, LECLMOD)
--VALUES ('LEC0003','講座三',400,'SPKR0003','ROOM0002',
--to_timestamp('02-NOV-20 08.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('02-NOV-20 09.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
--to_timestamp('02-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('01-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
--'101101101101101101','101101101101101101',load_blob('img3.jpg'),1,to_timestamp('18-OCT-20 05.14.30.773216000 PM','DD-MON-RR HH.MI.SSXFF AM'));
--
--INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECPIC, LECSTATUS, LECLMOD)
--VALUES ('LEC0004','講座四',900,'SPKR0004','ROOM0003',
--to_timestamp('11-NOV-20 11.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('12-NOV-20 01.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
--to_timestamp('11-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('10-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
--'101010101','202010101',load_blob('img4.jpg'),1,to_timestamp('18-OCT-20 05.17.29.392846000 PM','DD-MON-RR HH.MI.SSXFF AM'));
--
--INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECPIC, LECSTATUS, LECLMOD)
--VALUES ('LEC0005','講座五',180,'SPKR0005','ROOM0001',
--to_timestamp('17-NOV-20 08.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('17-NOV-20 09.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
--to_timestamp('17-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('16-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
--'111111000','111122000',load_blob('img5.jpg'),1,to_timestamp('18-OCT-20 05.19.39.705008000 PM','DD-MON-RR HH.MI.SSXFF AM'));
--
--INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECPIC, LECSTATUS, LECLMOD)
--VALUES('LEC0006','講座六',600,'SPKR0002','ROOM0001',to_timestamp('21-NOV-20 10.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('21-NOV-20 12.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
--to_timestamp('21-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('20-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
--'111101111','111101111',load_blob('img6.jpg'),1,to_timestamp('20-OCT-20 05.22.23.402000000 PM','DD-MON-RR HH.MI.SSXFF AM'));
--
--INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECPIC, LECSTATUS, LECLMOD)
--VALUES ('LEC0007','講座七',360,'SPKR0007','ROOM0002',to_timestamp('21-NOV-20 06.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('21-NOV-20 08.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
--to_timestamp('21-OCT-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('21-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
--'011101110011101110','022102110011201220',load_blob('img7.jpg'),1,to_timestamp('20-OCT-20 05.24.40.623000000 PM','DD-MON-RR HH.MI.SSXFF AM'));
--
--INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECPIC, LECSTATUS, LECLMOD)
--VALUES ('LEC0008','講座八',150,'SPKR0001','ROOM0001',to_timestamp('02-DEC-20 05.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('02-DEC-20 08.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
--to_timestamp('02-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('01-DEC-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
--'111111111','111111111',load_blob('img8.jpg'),1,to_timestamp('20-OCT-20 05.25.58.554000000 PM','DD-MON-RR HH.MI.SSXFF AM'));
--
--INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECPIC, LECSTATUS, LECLMOD)
--VALUES ('LEC0009','講座九',420,'SPKR0008','ROOM0004',to_timestamp('07-DEC-20 10.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('07-DEC-20 11.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
--to_timestamp('07-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('06-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
--'100110011111','200120012111',load_blob('img9.jpg'),1,to_timestamp('20-OCT-20 05.27.46.337000000 PM','DD-MON-RR HH.MI.SSXFF AM'));
--
--INSERT INTO LECTURE (LECNO, LECNAME, LECPRICE, SPKRNO, ROOMNO, LECSTART, LECEND, SIGNSTART, SIGNEND, INITSEAT, CURRSEAT, LECPIC, LECSTATUS, LECLMOD)
--VALUES ('LEC0010','講座十',299,'SPKR0003','ROOM0006',to_timestamp('17-DEC-20 09.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('17-DEC-20 12.00.00.000000000 PM','DD-MON-RR HH.MI.SSXFF AM'),
--to_timestamp('17-NOV-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),to_timestamp('16-DEC-20 12.00.00.000000000 AM','DD-MON-RR HH.MI.SSXFF AM'),
--'1111110101111111010111111','1111110201112221010111111',load_blob('img10.jpg'),1,to_timestamp('20-OCT-20 05.29.44.723000000 PM','DD-MON-RR HH.MI.SSXFF AM'));
-- ==================== #10 講座訂單 LEC_ORDER ====================
-- ==================== #11 講座定位明細 LEC_SEAT ====================
-- ==================== #12 課程種類 COURSE_TYPE ====================
-- ==================== #13 課程 COURSE ====================
-- ==================== #14 課程影片 COURSE_VIDEO ====================
-- ==================== #15 觀看進度 VIDEO_BAR ====================
-- ==================== #16 課程附件 COURSE_ATTACH ====================
-- ==================== #17 評價 COURSE_ASSESS ====================
-- ==================== #18 留言板貼文 POSTS ====================
-- ==================== #19 留言板檢舉明細 REPORT_DETAIL ====================
-- ==================== #20 優惠活動表 PROMO_LIST ====================
-- ==================== #21 優惠活動明細 PROMO_DETAIL ====================
-- ==================== #22 折扣碼優惠 COUP_CODE ====================
-- ==================== #23 課程訂單主檔 ORDER_MASTER ====================
-- ==================== #24 課程訂單明細 ORDER_DETAIL ====================
-- ==================== #25 追蹤清單 TRACKING_LIST ====================
-- ==================== #26 題型難易度 TEST_TYPE ====================
-- ==================== #27 題庫 QUESTION_BANK ====================
-- ==================== #28 考卷 TESTS ====================
-- ==================== #29 考卷作答明細 ANSWER_LIST ====================